import{C as P,u as v,p as r,o as u,d,b as s,i as l,w,E as f,t as _,F as x,e as $,h as A,G as N,r as S,s as O,_ as B,c as M,m as R,H as c}from"./index-d9377e3a.js";import{A as I}from"./Avatar-166461f8.js";import{D as q}from"./Dropdown-e0c50cd3.js";import{C}from"./CustomIcons-60888788.js";import"./use-tracked-pointer-4b3ac621.js";import"./use-resolve-button-type-390b11ae.js";const L={class:"flex w-56 shrink select-none flex-col border-r text-base text-gray-700"},V={class:"flex items-center gap-2"},z={class:"flex flex-col gap-1 px-2"},F=["onClick"],G=s("div",{class:"grow"},null,-1),K={class:"mb-3 flex flex-col gap-1 px-2"},j=["onClick"],U={class:"py-5 text-base"},W={class:"w-full table-fixed border-collapse border"},X={class:"w-28 border-r px-4"},J={class:"rounded bg-gray-100 p-1.5 text-gray-500 shadow shadow-gray-400"},Q={class:"px-4"},Y=P({__name:"SideBarMenu",setup(e){const o=N(),a=v(),i=navigator.userAgent.indexOf("Mac OS X")!=-1,p=r(!1),h=[{sequence:i?"⌃ + ⌥ + R":"Ctrl + Alt + R",label:"Mark status of ticket as Replied"},{sequence:i?"⌃ + ⌥ + E":"Ctrl + Alt + E",label:"Mark status of ticket as Resolved"},{sequence:i?"⌃ + ⌥ + C":"Ctrl + Alt + C",label:"Mark status of ticket as Closed"}],k=[{label:"Dashboard",icon:"dashboard",to:{path:"/frappedesk/dashboard"}},{label:"Tickets",icon:"ticket",to:{path:"/frappedesk/tickets"}},{label:"Customers",icon:"customer",to:{path:"/frappedesk/customers"}},{label:"Contacts",icon:"customers",to:{path:"/frappedesk/contacts"}}],g=[{label:"Knowledge Base",icon:"kb-articles",to:{path:"/frappedesk/kb"}},{label:"Settings",icon:"settings",to:{path:"/frappedesk/settings"}}],m=[{label:"Shortcuts",icon:"command",handler:()=>{p.value=!0}},{label:"Customer portal",icon:"users",handler:()=>{window.open("/support/tickets","_blank")}},{label:"Log out",icon:"log-out",handler:()=>a.logout()}],b={"Knowledge Base":"frappedesk/kb",Contacts:"frappedesk/contacts",Customers:"frappedesk/customers",Dashboard:"frappedesk/dashboard",Reports:"frappedesk/reports",Settings:"frappedesk/settings",Tickets:"frappedesk/tickets"};function n(y){return o.path.includes(b[y])}return(y,T)=>{const D=S("Button"),E=S("Dialog");return u(),d("div",L,[s("div",null,[l(f(q),{options:m},{default:w(({open:t})=>[l(D,{class:"my-3 w-full bg-white px-2 hover:bg-white"},{default:w(()=>[s("div",V,[s("div",null,[l(f(I),{size:"sm",label:f(a).userName,"image-u-r-l":f(a).userImage},null,8,["label","image-u-r-l"])]),s("div",null,_(f(a).userName),1),s("div",null,[l(f(O),{name:t?"chevron-up":"chevron-down",class:"h-5 w-5 text-gray-500"},null,8,["name"])])])]),_:2},1024)]),_:1})]),s("div",z,[(u(),d(x,null,$(k,t=>s("div",{key:t.label,class:A(["flex cursor-pointer items-center gap-2 rounded-lg p-2",{"bg-gray-200":n(t.label),"text-gray-900":n(t.label),"hover:bg-gray-100":!n(t.label)}]),onClick:H=>y.$router.push(t.to)},[l(C,{name:t.icon,class:"h-4 w-4"},null,8,["name"]),s("div",null,_(t.label),1)],10,F)),64))]),G,s("div",K,[(u(),d(x,null,$(g,t=>s("div",{key:t.label,class:A(["flex cursor-pointer items-center gap-2 rounded-lg p-2",{"bg-gray-200":n(t.label),"text-gray-900":n(t.label),"hover:bg-gray-100":!n(t.label)}]),onClick:H=>y.$router.push(t.to)},[l(C,{name:t.icon,class:"h-4 w-4"},null,8,["name"]),s("div",null,_(t.label),1)],10,j)),64))]),l(E,{modelValue:p.value,"onUpdate:modelValue":T[0]||(T[0]=t=>p.value=t),options:{title:"Keyboard Shortcuts"}},{"body-content":w(()=>[s("div",U,[s("table",W,[s("tbody",null,[(u(),d(x,null,$(h,t=>s("tr",{key:t.label,class:"h-16 border-y"},[s("td",X,[s("span",J,_(t.sequence),1)]),s("td",Q,_(t.label),1)])),64))])])])]),_:1},8,["modelValue"])])}}}),Z={name:"Desk",components:{SideBarMenu:Y,CustomIcons:C},setup(){const e=r(!1),o=v(),a=r([]),i=r([]),p=r([]),h=r({}),k=r([]),g=r({}),m=r([]),b=r([]),n=r({});return c("ticketTypes",a),c("ticketPriorities",i),c("ticketStatuses",p),c("ticketController",h),c("contacts",k),c("contactController",g),c("agents",m),c("agentGroups",b),c("agentController",n),{mounted:e,authStore:o,ticketTypes:a,ticketPriorities:i,ticketStatuses:p,ticketController:h,contacts:k,contactController:g,agents:m,agentGroups:b,agentController:n}},computed:{initialized(){return!this.mounted||!this.authStore.isLoggedIn||!this.authStore.hasDeskAccess||this.$resources.frappedeskSettings.loading?!1:this.$resources.frappedeskSettings.data.initial_agent_set?this.$resources.frappedeskSettings.data.initial_demo_ticket_created?!0:(this.$resources.createInitialDemoTicket.submit(),!1):(this.$resources.setupInitialAgent.submit(),!1)},defaultOutgoingEmailAccountSetup(){return this.$resources.defaultOutgoingEmailAccount.loading?"NOT SET":this.$resources.defaultOutgoingEmailAccount.data>0}},watch:{initialized(e){e&&this.handlePostOnboardSetupReqs()}},mounted(){if(!this.authStore.isLoggedIn){this.$router.push({name:"DeskLogin",query:{route:this.$route.path}});return}if(!this.authStore.hasDeskAccess){this.$router.push({path:"/support/tickets"});return}this.$resources.frappedeskSettings.fetch(),this.ticketController.set=(e,o,a=null)=>{switch(o){case"type":return this.$resources.assignTicketType.submit({ticket_id:e,type:a});case"status":return this.$resources.assignTicketStatus.submit({ticket_id:e,status:a});case"priority":return this.$resources.assignTicketPriority.submit({ticket_id:e,priority:a});case"contact":return this.$resources.updateTicketContact.submit({ticket_id:e,contact:a});case"agent":return this.$resources.assignTicketToAgent.submit({ticket_id:e,agent_id:a})}},this.ticketController.new=(e,o)=>{switch(e){case"ticket":return this.$resources.createTicket.submit({values:o});case"type":this.$resources.createTicketType.submit({type:o});break}},this.$socket.on("list_update",e=>{switch(e.doctype){case"HD Ticket Type":this.$resources.types.reload();break;case"HD Agent":this.$resources.agents.reload();break}}),this.mounted=!0},unmounted(){this.$socket.off("list_update")},methods:{handlePostOnboardSetupReqs(){if(!this.$resources.frappedeskSettings.data.helpdesk_name&&!this.$resources.frappedeskSettings.data.initial_helpdesk_name_setup_skipped){this.showHelpdeskNameSetupToast();return}if(!this.$resources.frappedeskSettings.data.suppress_default_email_toast&&this.defaultOutgoingEmailAccountSetup!="NOT SET"&&!this.defaultOutgoingEmailAccountSetup){this.showDefaultEmailAccountSetupToast();return}!this.$resources.agentCount.loading&&this.$resources.agentCount.data==0&&this.showAddAgentsToast()},showHelpdeskNameSetupToast(){this.$toast({title:"Set a name",text:"What would you like to name your helpdesk?",timeout:0,icon:"edit",iconClasses:"text-blue-500",form:{classes:"flex gap-1",inputs:[{type:"text",fieldname:"helpdeskName",placeholder:"Frappe Helpdesk"}],onSubmit:e=>{const a=e.target?.elements?.helpdeskName?.value;a&&this.$resources.setHelpdeskName.submit({name:a})}},actionOnClose:()=>{this.$resources.skipHelpdeskNameSetup.submit()}})},showDefaultEmailAccountSetupToast(){this.$toast({title:"Default outgoing email account not added",text:"Please add a default outgoing email account in settings.",timeout:0,icon:"mail",iconClasses:"text-red-500",buttons:[{title:"Setup now",appearance:"primary",iconRight:"arrow-right",onClick:()=>{this.$router.push({name:"Emails"})}}]})},showAddAgentsToast(){this.$toast({title:"Add agent",text:"Please add an agent from settings",timeout:0,appearance:"info",icon:"users",iconClasses:"text-red-500",buttons:[{title:"Add now",appearance:"danger",iconRight:"arrow-right",onClick:()=>{this.$router.push({name:"Agents"})}}]})}},resources:{setupInitialAgent(){return{url:"frappedesk.api.setup.initial_agent_setup",onSuccess:e=>{this.$resources.frappedeskSettings.fetch()},onError:e=>{this.$toast({title:"Something went wrong, while adding initial agent",text:"Please try again later.",icon:"x",iconClasses:"text-red-500"})}}},createInitialDemoTicket(){return{url:"frappedesk.api.setup.create_initial_demo_ticket",onSuccess:e=>{this.$resources.frappedeskSettings.fetch()},onError:e=>{this.$toast({title:"Something went wrong, while creating a demo ticket",text:"Please try again later.",icon:"x",iconClasses:"text-red-500"})}}},setHelpdeskName(){return{url:"frappedesk.api.settings.update_helpdesk_name",onSuccess:e=>{document.title=`Frappe Desk ${e?` | ${e}`:""}`,this.$toast({title:"Helpdesk name updated!!",icon:"check",iconClasses:"text-green-500"})},onError:e=>{this.$toast({title:"Something went wrong, updating helpdesk name",text:"Please try again later.",icon:"x",iconClasses:"text-red-500"})}}},skipHelpdeskNameSetup(){return{url:"frappedesk.api.settings.skip_helpdesk_name_setup"}},frappedeskSettings(){return{url:"frappe.client.get",params:{doctype:"HD Settings",name:"HD Settings"},onError:e=>{this.$toast({title:"Something went wrong.",text:"Please try again later.",icon:"x",iconClasses:"text-red-500"})}}},defaultOutgoingEmailAccount(){return{url:"frappe.client.get_count",params:{doctype:"Email Account",filters:[["use_imap","=",1],["IMAP Folder","append_to","=","HD Ticket"],["default_outgoing","=",1]]},auto:!0}},agentCount(){return{url:"frappe.client.get_count",params:{doctype:"HD Agent"},auto:!0}},createTicket(){return{url:"frappedesk.api.ticket.create_new",onSuccess:()=>{},onError:e=>{throw this.$toast({title:"Error while creating ticket",text:e.messages.join(", "),icon:"x",iconClasses:"text-red-500"}),e}}},updateTicketContact(){return{url:"frappedesk.api.ticket.update_contact",onSuccess:async e=>{},onError:()=>{}}},types(){return{url:"frappedesk.extends.client.get_list",params:{doctype:"HD Ticket Type",pluck:"name"},auto:this.authStore.hasDeskAccess,onSuccess:e=>{this.ticketTypes=e},onError:()=>{}}},priorities(){return{url:"frappedesk.extends.client.get_list",params:{doctype:"HD Ticket Priority"},auto:this.authStore.hasDeskAccess,onSuccess:e=>{this.ticketPriorities=e},onError:()=>{}}},statuses(){return{url:"frappedesk.api.ticket.get_all_ticket_statuses",auto:this.authStore.hasDeskAccess,onSuccess:e=>{this.ticketStatuses=e},onError:()=>{}}},contacts(){return{url:"frappedesk.extends.client.get_list",params:{doctype:"Contact",fields:["*"],limit_page_length:0},auto:this.authStore.hasDeskAccess,onSuccess:e=>{this.contacts=e},onError:()=>{}}},agents(){return{url:"frappedesk.extends.client.get_list",params:{doctype:"HD Agent",fields:["name","agent_name","user_image"]},auto:this.authStore.hasDeskAccess,onSuccess:e=>{this.agents=e},onError:()=>{}}},agentGroups(){return{url:"frappedesk.extends.client.get_list",params:{doctype:"HD Team"},auto:this.authStore.hasDeskAccess,onSuccess:e=>{this.agentGroups=e},onError:()=>{}}},assignTicketToAgent(){return{url:"frappedesk.api.ticket.assign_ticket_to_agent",onSuccess:async()=>{this.$event.emit("update_ticket_list")},onError:()=>{}}},assignTicketType(){return{url:"frappedesk.api.ticket.assign_ticket_type",onSuccess:async e=>{},onError:()=>{}}},assignTicketStatus(){return{url:"frappedesk.api.ticket.assign_ticket_status",onSuccess:async()=>{this.$event.emit("update_ticket_list")},onError:()=>{}}},assignTicketPriority(){return{url:"frappedesk.api.ticket.assign_ticket_priority",onSuccess:async e=>{},onError:()=>{}}},createTicketType(){return{url:"frappedesk.api.ticket.check_and_create_ticket_type",onSuccess:()=>{this.$resources.types.fetch()},onError:()=>{}}}},directivs:{}},ee={key:0,class:"h-screen w-screen"},te={key:0},se={class:"flex h-screen w-screen flex-row"},ae={key:1,class:"flex h-full w-full max-w-full grow-0"},re={class:"m-auto text-base font-normal"};function oe(e,o,a,i,p,h){const k=S("SideBarMenu"),g=S("router-view"),m=S("CustomIcons");return i.authStore.isLoggedIn&&i.authStore.hasDeskAccess?(u(),d("div",ee,[h.initialized?(u(),d("div",te,[s("div",se,[l(k),(u(),M(g,{key:e.$route.fullPath,class:"grow"}))])])):(u(),d("div",ae,[s("div",re,[l(m,{name:"frappedesk",class:"w-[200px]"})])]))])):R("",!0)}const de=B(Z,[["render",oe]]);export{de as default};
