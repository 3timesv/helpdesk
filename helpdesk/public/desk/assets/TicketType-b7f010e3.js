import{_ as f,s as I,I as V,p as k,o as u,d,b as s,i as o,w as l,k as m,h as E,m as $,r}from"./index-d9377e3a.js";import{E as b}from"./ErrorMessage-e4ff6432.js";import{T as C}from"./TextEditor-b1ee2b34.js";import{A as D}from"./Autocomplete-c752a27e.js";import"./CustomIcons-60888788.js";import"./use-tracked-pointer-4b3ac621.js";import"./use-resolve-button-type-390b11ae.js";import"./use-controllable-93c8440b.js";const B={name:"TicketTypeInfo",props:["ticketTypeId"],components:{FeatherIcon:I,Input:V,Autocomplete:D,TextEditor:C,ErrorMessage:b},setup(){const e=k({title:"",priority:"",description:""}),t=k({title:""});return{newTicketTypeValues:e,ticketTypeInputErrors:t}},computed:{ticketType(){if(this.ticketTypeId){const e=this.$resources.ticketType.doc;return e&&(this.newTicketTypeValues.title=e.name,this.newTicketTypeValues.priority=e.priority,this.newTicketTypeValues.description=e.description),e}else return{title:"",description:"",priority:""}}},resources:{ticketType(){if(this.ticketTypeId)return{type:"document",doctype:"HD Ticket Type",name:this.ticketTypeId,setValue:{onSuccess:()=>{this.$toast({title:"Ticket Type Updated.",icon:"check",iconClasses:"text-green-500"})},onError:e=>{this.$toast({title:"Error while updating ticket type",text:e,icon:"x",iconClasses:"text-red-500"})}}}},renameTicketTypeDoc(){return{url:"frappe.client.rename_doc",onSuccess:e=>{this.$router.push({path:`/frappedesk/settings/ticket_types/${e}`})}}},newTicketType(){return{url:"frappe.client.insert",onSuccess:e=>{this.$router.push({path:`/frappedesk/settings/ticket_types/${e.name}`})}}}},methods:{validate(){return this.newTicketTypeValues.title===""?(this.ticketTypeInputErrors.title="Ticket Type name is required",!1):this.newTicketTypeValues.title=="new"?(this.ticketTypeInputErrors.title="Ticket Type name cannot be 'new'",!1):!0},save(){const e=this.ticketType.name,t=this.newTicketTypeValues.title,n=this.newTicketTypeValues;this.ticketTypeId?this.$resources.ticketType.setValue.submit({priority:n.priority,description:n.description}).then(()=>{t!=e&&this.$resources.renameTicketTypeDoc.submit({doctype:"HD Ticket Type",old_name:e,new_name:t})}):this.$resources.newTicketType.submit({doc:{doctype:"HD Ticket Type",name:n.title,description:n.description,priority:n.priority}})},cancel(){this.$router.go()}}},N={class:"min-w-[490px] px-[24px] py-[10px]"},M={class:"shrink-0 h-[72px] py-[22px] flow-root px-[16px]"},A={class:"float-left"},H=s("div",null,"Back to ticket type list",-1),S={class:"float-right"},F={class:"flex flex-row space-x-2"},O={key:0,class:"flex flex-row space-x-[24px] h-full border-t px-[16px] py-[22px]"},P={class:"flex flex-col space-y-[16px] h-full w-full"},q={class:"w-full space-y-1"},z=s("div",null,[s("span",{class:"block text-sm leading-4 text-gray-700"}," Priority ")],-1),U={class:"flex flex-col"},j=s("div",{class:"mb-2 block text-sm leading-4 text-gray-700"}," Description ",-1);function G(e,t,n,p,_,c){const a=r("FeatherIcon"),x=r("router-link"),y=r("Button"),h=r("Input"),v=r("ErrorMessage"),w=r("Autocomplete"),g=r("TextEditor");return u(),d("div",N,[s("div",M,[s("div",A,[o(x,{to:"/frappedesk/settings/ticket_types",class:"my-1 text-[12px] text-gray-600 stroke-gray-600 flex flex-row items-center space-x-1 hover:text-gray-700 hover:stroke-gray-700 select-none",role:"button"},{default:l(()=>[o(a,{name:"arrow-left",class:"w-[13px] h-[13px]"}),H]),_:1})]),s("div",S,[s("div",F,[o(y,{appearance:"secondary",onClick:t[0]||(t[0]=i=>c.cancel())},{default:l(()=>[m(" Cancel ")]),_:1}),o(y,{appearance:"primary",onClick:t[1]||(t[1]=()=>{c.validate()&&c.save()})},{default:l(()=>[m(" Save ")]),_:1})])])]),c.ticketType?(u(),d("div",O,[s("div",P,[s("div",null,[o(h,{label:"Title",type:"text",value:c.ticketType.name,onInput:t[2]||(t[2]=i=>{p.newTicketTypeValues.title=i})},null,8,["value"]),o(v,{message:p.ticketTypeInputErrors.title},null,8,["message"])]),s("div",q,[z,o(w,{value:p.newTicketTypeValues.priority,onChange:t[3]||(t[3]=i=>{i&&(p.newTicketTypeValues.priority=i.value)}),resourceOptions:{url:"frappedesk.extends.client.get_list",inputMap:i=>({doctype:"HD Ticket Priority",pluck:"name",filters:[["name","like",`%${i}%`]]}),responseMap:i=>i.map(T=>({label:T.name,value:T.name}))}},null,8,["value","resourceOptions"])]),s("div",U,[j,o(g,{class:E("bg-gray-100"),ref:"textEditor","editor-class":"min-h-[20rem] overflow-y-auto max-h-[73vh] px-3 max-w-full",content:c.ticketType.description,"starterkit-options":{heading:{levels:[2,3,4,5,6]}},onChange:t[4]||(t[4]=i=>{p.newTicketTypeValues.description=i})},null,8,["content"])])])])):$("",!0)])}const J=f(B,[["render",G]]),K={name:"TicketType",props:["ticketTypeId"],components:{TicketTypeInfo:J},mounted(){this.$event.emit("set-selected-setting","Ticket Types")}},L={class:"flex flex-col"};function Q(e,t,n,p,_,c){const a=r("TicketTypeInfo");return u(),d("div",L,[o(a,{ticketTypeId:n.ticketTypeId},null,8,["ticketTypeId"])])}const ie=f(K,[["render",Q]]);export{ie as default};
